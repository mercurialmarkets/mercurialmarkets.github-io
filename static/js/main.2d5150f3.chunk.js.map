{"version":3,"sources":["components/common/PageContainer.tsx","assets/zeta-logo.svg","constants/appConstants.ts","components/landing/TopNavBar.tsx","assets/card-vector-1.svg","assets/card-vector-2.svg","assets/card-vector-3.svg","assets/card-vector-4.svg","assets/flip-card-arrow.svg","components/landing/Cards.tsx","assets/roadmap-square-icon.svg","assets/roadmap-square-q2.svg","assets/roadmap-square-q3.svg","assets/roadmap-square-q4.svg","assets/circle-background.svg","components/landing/Roadmap.tsx","assets/modal-icon.svg","components/landing/SubscribeContainer.tsx","assets/footer-image.svg","components/landing/FooterSection.tsx","assets/white-link-vector.svg","components/landing/Button.tsx","components/landing/ProductInfo.tsx","assets/solana.svg","assets/serum.svg","components/landing/SolanaSerumContainer.tsx","assets/hero-image.svg","assets/link-vector.svg","components/landing/HeaderGraphicSection.tsx","assets/trading-banner-mobile.svg","assets/trading-banner-web-left.svg","assets/trading-banner-web-right.svg","components/competition/Banner.tsx","components/landing/index.tsx","pages/Landing.tsx","assets/arrow-icon.svg","components/Loading/index.tsx","components/competition/FormSection.tsx","assets/prizes-banner.svg","assets/planet-icon.svg","components/competition/CompInfoSection.tsx","components/competition/SignUpModal.tsx","components/competition/index.tsx","pages/Competition.tsx","pages/Loading.tsx","theme.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["PageContainer","children","Page","styled","div","ZETA_TWITTER_URL","ZETA_MEDIUM_URL","ZETA_DISCORD_URL","ZETA_INSTAGRAM_URL","ZETA_GITBOOK_URL","ZETA_APP_URL","TopNavBar","TopNavContainer","ZetaLogoTextContainer","to","ZetaImgContainer","ZetaImg","src","ZetaLogo","alt","ZetaText","TradingButton","href","SocialLogoContainer","SocialLogo","target","TwitterLogo","DiscordLogo","MediumLogo","InstagramLogo","img","a","Twitter","Discord","MediumSquare","SocialInstagram","CardsSection","SplitCardsSection","TopSplitCardsContainer","FlipCard","FlipCardInner","className","FlipCardFront","CardGraphic","CardVector1","CardHeaderText","CardArrow","FlipCardArrow","FlipCardBack","CardBodyText","CardVector2","BottomSplitCardsContainer","CardVector3","CardVector4","SplitCardsContainer","p","FlipCardContent","RoadmapSection","quarters","0","1","2","3","useState","selectedQuarter","setSelectedQuarter","RoadmapContainer","RoadmapGraphicContainer","RoadmapGraphic","GraphicCell","FirstGraphicCellContainer","QuarterCell","quarterId","selected","onClick","BoldRoadmapSubText","LastGraphicCellContainer","YearGraphicCellContainer","YearGraphicCell","RoadmapHeaderText","SecondGraphicCellContainer","ThirdGraphicCellContainer","RoadmapInformation","RoadmapHeaderContainer","RoadmapSubText","WebRoadmap","RoadmapBodyContainer","RoadmapBodyCard","RoadmapBodyCardOutline","RoadmapBodyCardHeader","HthonText","HackathonText","RoadmapBodyCardChild","RoadmapSquare","RoadmapSquareImg","RoadmapBodyCardContent","RoadmapYellowHeaderText","RoadmapSquareImgQ2","RoadmapSquareImgQ3","RoadmapSquareImgQ4","RoadmapSlider","onScroll","e","scrollWidth","currentTarget","clientWidth","currentScrollDistance","scrollLeft","Math","floor","id","RoadmapButtons","MobileRoadmapButtons","RoadmapAnchor","WebRoadmapButtons","WebRoadmapButton","CircleImg","h1","CustomForm","status","message","onValidated","headerText","email","setEmail","subscribeStatus","setSubscribeStatus","handleSubmit","indexOf","EMAIL","useEffect","ModalBackground","length","Modal","CloseModalContainer","CloseIconWrapper","ModalContent","ProgressContainer","CircularProgress","SuccessContainer","ModalText","DefiText","SubText","CommunityContainer","CoummunitySubText","DiscordButtonAnchor","DiscordButton","MailChimpText","dangerouslySetInnerHTML","__html","SubscribeContainerWrapper","header","SubscribeContainer","SubscribeInput","value","onChange","placeholder","autoComplete","onKeyDown","keyCode","SubscribeButtonContainer","SubscribeButtonGlow","SubscribeButton","InputButtonContainer","url","render","subscribe","formData","input","button","ModalGraphicSVG","span","FooterSection","Footer","FooterContainer","LinksSection","LinksWrapper","LinksColumnContainer","LinkContainer","HeaderText","SocialMediaAnchor","BodyText","SignUpWrapper","GraphicSection","section","FooterImage","Button","WhiteButton","LinkVectorSVG","LinkVector","ProductInfoSection","ProductInfoContainer","ProductTextContainer","ButtonContainer","SolanaSerumSection","FooterText","LogosContainer","LogosWrapper","SecondaryLogoAnchor","SecondaryLogo","SolanaLogo","SerumLogo","HeaderGraphicSection","SplitPaneSection","HeaderPaneSection","HeaderPaneContainer","PaneHeaderContainer","SubtitleText","LitepaperAnchor","LinkSVG","style","textDecoration","AppButton","PracticeTradingAnchor","GraphicPaneSection","PaneSection","HeroImageSVG","Banner","history","useHistory","BannerContainer","push","LargerScreenWrapper","LeftContainer","SmallScreenText","LargerScreenText","RightContainer","MobileBannerSVG","Container","WebBannerLeftSVG","WebBannerRightSVG","LandingContainer","PaneBody","ProductSection","body","LandingPage","LoadingSpinner","LdsRing","MyTextInput","label","props","useField","field","meta","htmlFor","name","autocomplete","touched","error","FormSection","handleOpenModal","recaptchaRef","useRef","loading","setLoading","remindCaptcha","setRemindCaptcha","handleSubmission","values","FormData","append","choice","handle","address","fetch","method","then","response","console","log","catch","FormContainer","FormContent","initialValues","validationSchema","Yup","oneOf","required","min","max","onSubmit","current","getValue","role","display","flexDirection","type","ReCAPTCHAContainer","sitekey","ref","WarningText","SubmitButton","ArrowImg","ArrowSVG","CompInfoSection","CompInfoContainer","InfoSection","GradientHeaderText","MobileTimeText","WebTimeText","PrizesSection","PrizesBanner","PlanetGraphic","PlanetSVG","FirstPrizeWrapper","ThinnerSubText","FirstPrizeThinnerSubText","EndingText","PrizesBannerSVG","SignUpModal","ModalContainer","TextContainer","WhiteLinkImg","WhiteLinkSVG","CompetitionContainer","openModal","setOpenModal","CompetitionSection","bool","CompetitionPage","LoadingPage","LoadingPageContainer","LdsGrid","theme","brown","4","5","6","7","8","9","10","App","showLoading","setShowLoading","setTimeout","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d5150f3.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const PageContainer: React.FC = ({ children }) => {\n  return <Page>{children}</Page>;\n};\n\nconst Page = styled.div`\n  background: linear-gradient(\n    180.78deg,\n    #2e2350 12.57%,\n    #615684 52.95%,\n    #2e2350 101.7%\n  );\n  background-repeat: no-repeat;\n  background-size: cover;\n  overflow-x: hidden;\n  > * {\n    overflow-y: hidden;\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/zeta-logo.e0aaa1d3.svg\";","/* URLs */\n\nexport const ZETA_TWITTER_URL = \"https://twitter.com/zetamarkets\";\nexport const SOLANA_URL = \"https://solana.com/\";\nexport const SERUM_URL = \"https://projectserum.com/\";\nexport const ZETA_MEDIUM_URL = \"https://medium.com/@zetamarkets\";\nexport const ZETA_DISCORD_URL = \"https://discord.gg/zeta\";\nexport const ZETA_TELEGRAM_URL = \"https://t.me/joinchat/FxLyY7hyy344OWZl\";\nexport const ZETA_INSTAGRAM_URL = \"https://www.instagram.com/zetamarkets/\";\nexport const ZETA_GITBOOK_URL = \"https://zetamarkets.gitbook.io/zeta/\";\nexport const ZETA_DEMO_URL = \"https://youtu.be/qJupa-s3y-I\";\nexport const SOLANA_HACK_RECAP_URL =\n  \"https://zetamarkets.medium.com/zetas-hackathon-recap-9dec63eb3c1e\";\nexport const WHATS_AN_OP_URL =\n  \"https://zetamarkets.medium.com/zeta-101-whats-an-option-fb0a5e0abb41\";\nexport const BINARY_OP_URL =\n  \"https://zetamarkets.medium.com/zeta-101-binary-options-c0f33c9fefa9\";\nexport const MAILCHIMP_SIGNUP_API =\n  \"//contact.us1.list-manage.com/subscribe/post?u=b19364abcb3282a7851a76d76&amp;id=5b3573102c\";\nexport const READ_MORE_URL =\n  \"https://zetamarkets.medium.com/zeta-markets-%CE%B6-42fe4efa8a55\";\nexport const ZETA_APP_URL = \"https://trade.zeta.markets\";\nexport const GOOGLE_SHEETS_API =\n  \"https://script.google.com/macros/s/AKfycbwCZx8sDImWyuoLbadGG2w5A-G42sjlkC1XVqLsFw8l7Dgk9tV3qCj8xmNdPtvRe8GWAA/exec\";\nexport const RECAPTCHA_PUBLIC_KEY = \"6LfiH68bAAAAAHPI372m183bx8FVSQlUKq9M2LuR\";\n","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nimport { Twitter, Discord } from \"@styled-icons/bootstrap\";\nimport { MediumSquare } from \"@styled-icons/boxicons-logos\";\nimport { SocialInstagram } from \"@styled-icons/typicons/SocialInstagram\";\n\nimport ZetaLogo from \"../../assets/zeta-logo.svg\";\nimport {\n  ZETA_TWITTER_URL,\n  ZETA_DISCORD_URL,\n  ZETA_MEDIUM_URL,\n  ZETA_INSTAGRAM_URL,\n  ZETA_APP_URL,\n} from \"../../constants/appConstants\";\n\nexport const TopNavBar = () => {\n  return (\n    <TopNavContainer>\n      <ZetaLogoTextContainer>\n        <Link to=\"/\">\n          <ZetaImgContainer>\n            <ZetaImg src={ZetaLogo} alt=\"Zeta logo\"></ZetaImg>\n          </ZetaImgContainer>\n        </Link>\n        <ZetaText>Z E T A</ZetaText>\n        <TradingButton href={ZETA_APP_URL}>TRADE</TradingButton>\n      </ZetaLogoTextContainer>\n      <SocialLogoContainer>\n        <SocialLogo href={ZETA_TWITTER_URL} target=\"_blank\">\n          <TwitterLogo />\n        </SocialLogo>\n        <SocialLogo href={ZETA_DISCORD_URL} target=\"_blank\">\n          <DiscordLogo />\n        </SocialLogo>\n        <SocialLogo href={ZETA_MEDIUM_URL} target=\"_blank\">\n          <MediumLogo />\n        </SocialLogo>\n        <SocialLogo href={ZETA_INSTAGRAM_URL} target=\"_blank\">\n          <InstagramLogo />\n        </SocialLogo>\n      </SocialLogoContainer>\n    </TopNavContainer>\n  );\n};\n\nconst TopNavContainer = styled.div`\n  margin-top: 80px;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  padding: 2em 0;\n\n  @media (max-width: 801px) {\n    margin-left: 1em;\n    margin-right: 1em;\n  }\n  @media (max-width: 335px) {\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 0;\n    margin-top: 80px;\n  }\n\n  @media (min-width: 450px) {\n    height: 90px;\n  }\n`;\n\nconst ZetaLogoTextContainer = styled.div`\n  font-family: var(--ff-primary);\n  font-size: 1.5rem;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  @media (max-width: 335px) {\n    margin-bottom: 1rem;\n  }\n`;\n\nconst ZetaImgContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  justify-content: center;\n  transition: 250ms;\n  &:hover {\n    filter: brightness(1.2);\n  }\n`;\n\nconst ZetaImg = styled.img`\n  height: 35px;\n  max-width: 100%;\n  padding-right: 0.75rem;\n\n  @media (max-width: 450px) {\n    height: 1.75rem;\n  }\n`;\n\nconst ZetaText = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  font-size: 1rem;\n  @media (max-width: 700px) {\n    display: none;\n  }\n`;\n\nconst SocialLogoContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 150px;\n\n  > * {\n    flex-basis: 0;\n    flex-grow: 1;\n  }\n`;\n\nconst SocialLogo = styled.a`\n  display: flex;\n  padding: 10px;\n  color: #ffffff;\n\n  &:hover {\n    transform: scale(1.15);\n  }\n  transition: transform 250ms ease-out;\n\n  svg {\n    height: 25px;\n  }\n\n  @media (max-width: 801px) {\n    padding: 3%;\n    margin-left: 0.5rem;\n    svg {\n      height: 20px;\n    }\n  }\n`;\n\nconst TwitterLogo = styled(Twitter)``;\n\nconst DiscordLogo = styled(Discord)``;\n\nconst MediumLogo = styled(MediumSquare)`\n  padding-bottom: 2px;\n  transform: scale(1.2);\n`;\n\nconst InstagramLogo = styled(SocialInstagram)`\n  padding-bottom: 2px;\n  transform: scale(1.22);\n`;\n\nconst TradingButton = styled.a`\n  text-decoration: none;\n  font-family: Raleway;\n  font-weight: 400;\n  font-size: 1rem;\n  display: block;\n  height: 20px;\n  text-align: center;\n  padding: 0.25rem 0.75rem;\n\n  border: 0.1rem solid #ffe178;\n  color: #ffe178;\n  cursor: pointer;\n  margin-left: 3rem;\n  transition: transform 250ms ease-out;\n  &:hover {\n    transform: scale(1.05);\n  }\n  @media (max-width: 700px) {\n    margin-left: 1rem;\n  }\n  @media (max-width: 450px) {\n    margin-left: 0;\n    font-size: 14px;\n    height: 15px;\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/card-vector-1.d439bae7.svg\";","export default __webpack_public_path__ + \"static/media/card-vector-2.e15623dd.svg\";","export default __webpack_public_path__ + \"static/media/card-vector-3.da2d3690.svg\";","export default __webpack_public_path__ + \"static/media/card-vector-4.91558604.svg\";","export default __webpack_public_path__ + \"static/media/flip-card-arrow.219821a8.svg\";","import React from 'react';\nimport styled from 'styled-components';\nimport CardVector1 from '../../assets/card-vector-1.svg';\nimport CardVector2 from '../../assets/card-vector-2.svg';\nimport CardVector3 from '../../assets/card-vector-3.svg';\nimport CardVector4 from '../../assets/card-vector-4.svg';\nimport FlipCardArrow from '../../assets/flip-card-arrow.svg';\n\nexport const CardsSection = () => {\n  return (\n    <SplitCardsSection>\n      <TopSplitCardsContainer>\n        <FlipCard>\n          <FlipCardInner className='flip-card-inner'>\n            <FlipCardFront>\n              <CardGraphic src={CardVector1} />\n              <CardHeaderText>Fundamental Options Framework</CardHeaderText>\n              <CardArrow src={FlipCardArrow} />\n            </FlipCardFront>\n            <FlipCardBack>\n              <CardBodyText>\n                Zeta auto-generates strikes and expiries for each option, with a\n                seamless settlement framework to recognise profit, manage\n                positions, and analyse risks - all on-chain.\n              </CardBodyText>\n            </FlipCardBack>\n          </FlipCardInner>\n        </FlipCard>\n        <FlipCard>\n          <FlipCardInner className='flip-card-inner'>\n            <FlipCardFront>\n              <CardGraphic src={CardVector2} />\n              <CardHeaderText>\n                Hybrid Orderbook & Options Market Maker (OMM)\n              </CardHeaderText>\n              <CardArrow src={FlipCardArrow} />\n            </FlipCardFront>\n            <FlipCardBack>\n              <CardBodyText>\n                The OMM will show two-way Black-Scholes price quotes on every\n                strike and expiry, and any participant is able to also post\n                limit orders, both of which are aggregated onto a central\n                orderbook.\n              </CardBodyText>\n            </FlipCardBack>\n          </FlipCardInner>\n        </FlipCard>\n      </TopSplitCardsContainer>\n      <BottomSplitCardsContainer>\n        <FlipCard>\n          <FlipCardInner className='flip-card-inner'>\n            <FlipCardFront>\n              <CardGraphic src={CardVector3} />\n              <CardHeaderText>Better Pricing & Risk Management</CardHeaderText>\n              <CardArrow src={FlipCardArrow} />\n            </FlipCardFront>\n            <FlipCardBack>\n              <CardBodyText>\n                Zeta's OMM uses the Black-Scholes Merton (BSM) pricing model\n                to derive prices for options across all strikes.\n              </CardBodyText>\n            </FlipCardBack>\n          </FlipCardInner>\n        </FlipCard>\n        <FlipCard>\n          <FlipCardInner className='flip-card-inner'>\n            <FlipCardFront>\n              <CardGraphic src={CardVector4} />\n              <CardHeaderText>Leveraged Trading</CardHeaderText>\n              <CardArrow src={FlipCardArrow} />\n            </FlipCardFront>\n            <FlipCardBack>\n              <CardBodyText>\n                With Solana's real-time block updates, Zeta is able to\n                effectively manage platform risk in real-time, allowing for\n                leveraged trading.\n              </CardBodyText>\n            </FlipCardBack>\n          </FlipCardInner>\n        </FlipCard>\n      </BottomSplitCardsContainer>\n    </SplitCardsSection>\n  );\n};\n\nconst SplitCardsSection = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  flex-grow: 1;\n\n  @media (min-width: 1000px) {\n    width: 60%;\n  }\n`;\n\nconst SplitCardsContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-grow: 1;\n  width: 100%;\n  height: 260px;\n  @media (min-width: 450px) {\n    height: 340px;\n  }\n  @media (max-width: 1000px) {\n    justify-content: center;\n  }\n`;\n\nconst TopSplitCardsContainer = styled(SplitCardsContainer)`\n  @media (min-width: 1000px) {\n    justify-content: flex-end;\n  }\n`;\n\nconst BottomSplitCardsContainer = styled(SplitCardsContainer)``;\n\nconst CardBodyText = styled.p`\n  font-weight: 400;\n  font-size: 0.625rem;\n  line-height: 25px;\n  letter-spacing: 0.01em;\n  padding: 0.5rem;\n\n  @media (min-width: 450px) {\n    font-size: 1rem;\n    line-height: 34px;\n  }\n`;\n\nconst CardHeaderText = styled(CardBodyText)`\n  font-weight: 700;\n`;\n\nconst FlipCard = styled.div`\n  background-color: transparent;\n  perspective: 1000px; /* Remove this if you don't want the 3D effect */\n  background: #2e2350;\n  box-shadow: 4px 4px 30px rgba(0, 0, 0, 0.25);\n  border-radius: 20px;\n  flex-grow: 1;\n  margin: 0.5rem;\n  padding: 0.5rem;\n  width: 50%;\n  max-width: 250px;\n\n  &:hover .flip-card-inner {\n    transform: rotateY(180deg);\n  }\n`;\n\nconst FlipCardInner = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  text-align: center;\n  transition: transform 0.8s;\n  transform-style: preserve-3d;\n`;\n\nconst FlipCardContent = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  -webkit-backface-visibility: hidden; /* Safari */\n  backface-visibility: hidden;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst FlipCardFront = styled(FlipCardContent)`\n  justify-content: space-evenly;\n  color: white;\n  transform: rotateX(0deg);\n`;\n\nconst FlipCardBack = styled(FlipCardContent)`\n  color: #ffe178;\n  transform: rotateY(180deg) rotateX(0deg);\n`;\n\nconst CardGraphic = styled.img`\n  height: 60px;\n  width: 60px;\n  @media (min-width: 800px) {\n    height: 90px;\n    width: 90px;\n  }\n`;\nconst CardArrow = styled.img`\n  height: 30px;\n  width: 30px;\n  @media (min-width: 800px) {\n    height: 45px;\n    width: 45px;\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/roadmap-square-icon.803d5015.svg\";","export default __webpack_public_path__ + \"static/media/roadmap-square-q2.172e3629.svg\";","export default __webpack_public_path__ + \"static/media/roadmap-square-q3.71788df3.svg\";","export default __webpack_public_path__ + \"static/media/roadmap-square-q4.b2072fb4.svg\";","export default __webpack_public_path__ + \"static/media/circle-background.985d4b97.svg\";","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport RoadmapSquareImg from '../../assets/roadmap-square-icon.svg';\nimport RoadmapSquareImgQ2 from '../../assets/roadmap-square-q2.svg';\nimport RoadmapSquareImgQ3 from '../../assets/roadmap-square-q3.svg';\nimport RoadmapSquareImgQ4 from '../../assets/roadmap-square-q4.svg';\nimport CircleImg from '../../assets/circle-background.svg';\n\nexport const RoadmapSection = () => {\n  const quarters = { 0: 'q1', 1: 'q2', 2: 'q3', 3: 'q4' };\n  const [selectedQuarter, setSelectedQuarter] = useState<string>('q1');\n\n  const handleScroll = (e: any) => {\n    const scrollWidth = e.currentTarget.clientWidth;\n    const currentScrollDistance = e.currentTarget.scrollLeft;\n    setSelectedQuarter(\n      // @ts-ignore\n      quarters[Math.floor(currentScrollDistance / scrollWidth)]\n    );\n  };\n\n  return (\n    <RoadmapContainer>\n      <RoadmapGraphicContainer>\n        <RoadmapGraphic>\n          <GraphicCell></GraphicCell>\n          <FirstGraphicCellContainer>\n            <QuarterCell\n              quarterId='q1'\n              selected={selectedQuarter}\n              onClick={() => {\n                setSelectedQuarter('q1');\n              }}\n            >\n              <BoldRoadmapSubText>H</BoldRoadmapSubText>\n            </QuarterCell>\n          </FirstGraphicCellContainer>\n          <GraphicCell></GraphicCell>\n          <LastGraphicCellContainer>\n            <QuarterCell\n              quarterId='q4'\n              selected={selectedQuarter}\n              onClick={() => {\n                setSelectedQuarter('q4');\n              }}\n            >\n              <BoldRoadmapSubText>Q4</BoldRoadmapSubText>\n            </QuarterCell>\n          </LastGraphicCellContainer>\n          <YearGraphicCellContainer>\n            <YearGraphicCell>\n              <RoadmapHeaderText>2021</RoadmapHeaderText>\n            </YearGraphicCell>\n          </YearGraphicCellContainer>\n          <SecondGraphicCellContainer>\n            <QuarterCell\n              quarterId='q2'\n              selected={selectedQuarter}\n              onClick={() => {\n                setSelectedQuarter('q2');\n              }}\n            >\n              <BoldRoadmapSubText>Q2</BoldRoadmapSubText>\n            </QuarterCell>\n          </SecondGraphicCellContainer>\n          <GraphicCell></GraphicCell>\n          <ThirdGraphicCellContainer>\n            <QuarterCell\n              quarterId='q3'\n              selected={selectedQuarter}\n              onClick={() => {\n                setSelectedQuarter('q3');\n              }}\n            >\n              <BoldRoadmapSubText>Q3</BoldRoadmapSubText>\n            </QuarterCell>\n          </ThirdGraphicCellContainer>\n          <GraphicCell></GraphicCell>\n        </RoadmapGraphic>\n      </RoadmapGraphicContainer>\n      <RoadmapInformation>\n        <RoadmapHeaderContainer>\n          <RoadmapHeaderText>Roadmap</RoadmapHeaderText>\n          <RoadmapSubText>\n            <b>It’s only the beginning.</b> This is what Zeta has in the works.\n          </RoadmapSubText>\n        </RoadmapHeaderContainer>\n        <WebRoadmap>\n          {selectedQuarter == 'q1' && (\n            <RoadmapBodyContainer>\n              <RoadmapBodyCard>\n                <RoadmapBodyCardOutline>\n                  <RoadmapBodyCardHeader>\n                    <HthonText>H'thon</HthonText>\n                    <HackathonText>Hackathon</HackathonText>\n                    <RoadmapBodyCardChild>\n                      <RoadmapSquare src={RoadmapSquareImg} />\n                    </RoadmapBodyCardChild>\n                  </RoadmapBodyCardHeader>\n                  <RoadmapBodyCardContent>\n                    <RoadmapSubText>\n                      <b>Whitepaper</b>\n                    </RoadmapSubText>\n                    <RoadmapSubText>\n                      <b>Launch Zeta v1 Binary Options </b>on Devnet\n                    </RoadmapSubText>\n                  </RoadmapBodyCardContent>\n                </RoadmapBodyCardOutline>\n              </RoadmapBodyCard>\n            </RoadmapBodyContainer>\n          )}\n          {selectedQuarter == 'q2' && (\n            <RoadmapBodyContainer>\n              <RoadmapBodyCard>\n                <RoadmapBodyCardOutline>\n                  <RoadmapBodyCardHeader>\n                    <RoadmapYellowHeaderText>Q2</RoadmapYellowHeaderText>\n                    <RoadmapBodyCardChild>\n                      <RoadmapSquare src={RoadmapSquareImgQ2} />\n                    </RoadmapBodyCardChild>\n                  </RoadmapBodyCardHeader>\n                  <RoadmapBodyCardContent>\n                    <RoadmapSubText>\n                      Integrate with <b>Serum DEX</b>\n                    </RoadmapSubText>\n                    <RoadmapSubText>\n                      Refactor codebase for production\n                    </RoadmapSubText>\n                  </RoadmapBodyCardContent>\n                </RoadmapBodyCardOutline>\n              </RoadmapBodyCard>\n            </RoadmapBodyContainer>\n          )}\n          {selectedQuarter == 'q3' && (\n            <RoadmapBodyContainer>\n              <RoadmapBodyCard>\n                <RoadmapBodyCardOutline>\n                  <RoadmapBodyCardHeader>\n                    <RoadmapYellowHeaderText>Q3</RoadmapYellowHeaderText>\n                    <RoadmapBodyCardChild>\n                      <RoadmapSquare src={RoadmapSquareImgQ3} />\n                    </RoadmapBodyCardChild>\n                  </RoadmapBodyCardHeader>\n                  <RoadmapBodyCardContent>\n                    <RoadmapSubText>\n                      <b>Launch Zeta V2 for Vanilla Options </b>on Devnet\n                    </RoadmapSubText>\n                    <RoadmapSubText>\n                      Integrate our <b>Unique Options AMM & Liquidity Pools</b>\n                    </RoadmapSubText>\n                  </RoadmapBodyCardContent>\n                </RoadmapBodyCardOutline>\n              </RoadmapBodyCard>\n            </RoadmapBodyContainer>\n          )}\n          {selectedQuarter == 'q4' && (\n            <RoadmapBodyContainer>\n              <RoadmapBodyCard>\n                <RoadmapBodyCardOutline>\n                  <RoadmapBodyCardHeader>\n                    <RoadmapYellowHeaderText>Q4</RoadmapYellowHeaderText>\n                    <RoadmapBodyCardChild>\n                      <RoadmapSquare src={RoadmapSquareImgQ4} />\n                    </RoadmapBodyCardChild>\n                  </RoadmapBodyCardHeader>\n                  <RoadmapBodyCardContent>\n                    <RoadmapSubText>\n                      Launch <b>Zeta V2 on Mainnet</b>\n                    </RoadmapSubText>\n                    <RoadmapSubText>\n                      <b>Zeta Token Launch</b>\n                    </RoadmapSubText>\n                  </RoadmapBodyCardContent>\n                </RoadmapBodyCardOutline>\n              </RoadmapBodyCard>\n            </RoadmapBodyContainer>\n          )}\n        </WebRoadmap>\n        <RoadmapSlider onScroll={handleScroll}>\n          <RoadmapBodyContainer id='q1'>\n            <RoadmapBodyCard>\n              <RoadmapBodyCardOutline>\n                <RoadmapBodyCardHeader>\n                  <HthonText>H'thon</HthonText>\n                  <HackathonText>Hackathon</HackathonText>\n                  <RoadmapBodyCardChild>\n                    <RoadmapSquare src={RoadmapSquareImg} />\n                  </RoadmapBodyCardChild>\n                </RoadmapBodyCardHeader>\n                <RoadmapBodyCardContent>\n                  <RoadmapSubText>\n                    <b>Whitepaper</b>\n                  </RoadmapSubText>\n                  <RoadmapSubText>\n                    <b>Launch Zeta v1 Binary Options </b>on Devnet\n                  </RoadmapSubText>\n                </RoadmapBodyCardContent>\n              </RoadmapBodyCardOutline>\n            </RoadmapBodyCard>\n          </RoadmapBodyContainer>\n          <RoadmapBodyContainer id='q2'>\n            <RoadmapBodyCard>\n              <RoadmapBodyCardOutline>\n                <RoadmapBodyCardHeader>\n                  <RoadmapYellowHeaderText>Q2</RoadmapYellowHeaderText>\n                  <RoadmapBodyCardChild>\n                    <RoadmapSquare src={RoadmapSquareImgQ2} />\n                  </RoadmapBodyCardChild>\n                </RoadmapBodyCardHeader>\n                <RoadmapBodyCardContent>\n                  <RoadmapSubText>\n                    Integrate with <b>Serum DEX</b>\n                  </RoadmapSubText>\n                  <RoadmapSubText>\n                    Refactor codebase for production\n                  </RoadmapSubText>\n                </RoadmapBodyCardContent>\n              </RoadmapBodyCardOutline>\n            </RoadmapBodyCard>\n          </RoadmapBodyContainer>\n          <RoadmapBodyContainer id='q3'>\n            <RoadmapBodyCard>\n              <RoadmapBodyCardOutline>\n                <RoadmapBodyCardHeader>\n                  <RoadmapYellowHeaderText>Q3</RoadmapYellowHeaderText>\n                  <RoadmapBodyCardChild>\n                    <RoadmapSquare src={RoadmapSquareImgQ3} />\n                  </RoadmapBodyCardChild>\n                </RoadmapBodyCardHeader>\n                <RoadmapBodyCardContent>\n                  <RoadmapSubText>\n                    <b>Launch Zeta V2 for Vanilla Options </b>on Devnet\n                  </RoadmapSubText>\n                  <RoadmapSubText>\n                    Integrate our <b>Unique Options AMM & Liquidity Pools</b>\n                  </RoadmapSubText>\n                </RoadmapBodyCardContent>\n              </RoadmapBodyCardOutline>\n            </RoadmapBodyCard>\n          </RoadmapBodyContainer>\n          <RoadmapBodyContainer id='q4'>\n            <RoadmapBodyCard>\n              <RoadmapBodyCardOutline>\n                <RoadmapBodyCardHeader>\n                  <RoadmapYellowHeaderText>Q4</RoadmapYellowHeaderText>\n                  <RoadmapBodyCardChild>\n                    <RoadmapSquare src={RoadmapSquareImgQ4} />\n                  </RoadmapBodyCardChild>\n                </RoadmapBodyCardHeader>\n                <RoadmapBodyCardContent>\n                  <RoadmapSubText>\n                    Launch <b>Zeta V2 on Mainnet</b>\n                  </RoadmapSubText>\n                  <RoadmapSubText>\n                    <b>Zeta Token Launch</b>\n                  </RoadmapSubText>\n                </RoadmapBodyCardContent>\n              </RoadmapBodyCardOutline>\n            </RoadmapBodyCard>\n          </RoadmapBodyContainer>\n        </RoadmapSlider>\n        <RoadmapButtons>\n          <MobileRoadmapButtons>\n            <RoadmapAnchor quarterId='q1' selected={selectedQuarter} />\n            <RoadmapAnchor quarterId='q2' selected={selectedQuarter} />\n            <RoadmapAnchor quarterId='q3' selected={selectedQuarter} />\n            <RoadmapAnchor quarterId='q4' selected={selectedQuarter} />\n          </MobileRoadmapButtons>\n          <WebRoadmapButtons>\n            <WebRoadmapButton\n              quarterId='q1'\n              selected={selectedQuarter}\n              onClick={() => {\n                setSelectedQuarter('q1');\n              }}\n            >\n              <BoldRoadmapSubText>H</BoldRoadmapSubText>\n            </WebRoadmapButton>\n            <WebRoadmapButton\n              quarterId='q2'\n              selected={selectedQuarter}\n              onClick={() => {\n                setSelectedQuarter('q2');\n              }}\n            >\n              <BoldRoadmapSubText>Q2</BoldRoadmapSubText>\n            </WebRoadmapButton>\n            <WebRoadmapButton\n              quarterId='q3'\n              selected={selectedQuarter}\n              onClick={() => {\n                setSelectedQuarter('q3');\n              }}\n            >\n              <BoldRoadmapSubText>Q3</BoldRoadmapSubText>\n            </WebRoadmapButton>\n            <WebRoadmapButton\n              quarterId='q4'\n              selected={selectedQuarter}\n              onClick={() => {\n                setSelectedQuarter('q4');\n              }}\n            >\n              <BoldRoadmapSubText>Q4</BoldRoadmapSubText>\n            </WebRoadmapButton>\n          </WebRoadmapButtons>\n        </RoadmapButtons>\n      </RoadmapInformation>\n    </RoadmapContainer>\n  );\n};\n\nconst RoadmapContainer = styled.div`\n  margin: auto;\n  width: min(90%, 70.5rem);\n\n  display: flex;\n  flex-direction: column;\n  @media (min-width: 1000px) {\n    flex-direction: row;\n    margin-top: 6rem;\n    margin-bottom: 6rem;\n  }\n  margin-top: 4rem;\n  margin-bottom: 4rem;\n  & ::-webkit-scrollbar {\n    width: 0px;\n    background: transparent; /* make scrollbar transparent */\n  }\n`;\nconst RoadmapGraphicContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 50%;\n  @media (max-width: 999px) {\n    display: none;\n  }\n`;\nconst RoadmapGraphic = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-template-rows: 1fr 1fr 1fr;\n  grid-gap: 20px;\n\n  width: 500px;\n  height: 500px;\n  background-image: url(${CircleImg});\n  background-repeat: no-repeat;\n  background-position: center center;\n  background-size: contain;\n\n  > div {\n    position: relative;\n    z-index: 1;\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nconst GraphicCell = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\nconst FirstGraphicCellContainer = styled(GraphicCell)`\n  justify-content: center;\n`;\nconst SecondGraphicCellContainer = styled(GraphicCell)`\n  justify-content: flex-end;\n  align-items: center;\n`;\nconst ThirdGraphicCellContainer = styled(GraphicCell)`\n  justify-content: center;\n  align-items: flex-end;\n`;\nconst LastGraphicCellContainer = styled(GraphicCell)`\n  align-items: center;\n`;\nconst YearGraphicCellContainer = styled(GraphicCell)`\n  justify-content: center;\n  align-items: center;\n`;\n\nconst QuarterCell = styled.div<{ selected: string; quarterId: string }>`\n  position: relative;\n  z-index: 2;\n  background: #2e2350;\n  border-radius: 10px;\n  height: 80px;\n  width: 80px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  transition: 200ms;\n  &:hover {\n    transform: scale(1.1);\n  }\n  background-color: ${({ selected, quarterId }) =>\n    selected == quarterId ? '#FFE178' : '#2e2350'};\n  color: ${({ selected, quarterId }) =>\n    selected == quarterId ? '#2e2350' : '#fff'};\n`;\n\nconst YearGraphicCell = styled.div``;\n\nconst RoadmapInformation = styled.div`\n  display: flex;\n  flex-direction: column;\n  @media (max-width: 1000px) {\n    flex-grow: 1;\n    padding: 0.5rem;\n  }\n  @media (min-width: 1000px) {\n    width: 50%;\n    justify-content: space-between;\n  }\n`;\nconst RoadmapHeaderContainer = styled.div`\n  text-align: end;\n  @media (min-width: 450px) and (max-width: 999px) {\n    margin-right: 1rem;\n  }\n`;\nconst RoadmapHeaderText = styled.h1`\n  font-size: 30px;\n  @media (min-width: 450px) {\n    font-size: 60px;\n  }\n`;\nconst RoadmapYellowHeaderText = styled(RoadmapHeaderText)`\n  color: #ffe178;\n`;\n\nconst HthonText = styled(RoadmapYellowHeaderText)`\n  @media (min-width: 321px) and (max-width: 449px) {\n    display: none;\n  }\n  @media (min-width: 1081px) {\n    display: none;\n  }\n  @media (min-width: 531px) and (max-width: 999px) {\n    display none;\n  }\n`;\nconst HackathonText = styled(RoadmapYellowHeaderText)`\n  @media (min-width: 450px) and (max-width: 530px) {\n    display: none;\n  }\n  @media (min-width: 1000px) and (max-width: 1080px) {\n    display: none;\n  }\n  @media (max-width: 321px) {\n    display: none;\n  }\n`;\n\nconst RoadmapSubText = styled.p`\n  padding: 0;\n  font-size: 0.625rem;\n  line-height: 25px;\n  @media (min-width: 450px) {\n    font-size: 1rem;\n    line-height: 34px;\n  }\n`;\n\nconst BoldRoadmapSubText = styled(RoadmapSubText)`\n  font-weight: 700;\n`;\n\nconst WebRoadmap = styled.div`\n  @media (max-width: 449px) {\n    display: none;\n  }\n  width: 100%;\n  @media (max-width: 999px) {\n    margin-left: -1rem;\n  }\n`;\n\nconst RoadmapSlider = styled.div`\n  @media (min-width: 450px) {\n    display: none;\n  }\n  width: 100%;\n  display: flex;\n  overflow-x: auto;\n  padding-top: 1rem;\n\n  -webkit-overflow-scrolling: touch;\n  scroll-snap-type: x mandatory;\n  scroll-behavior: smooth;\n  @media (max-width: 450px) {\n    width: 105%;\n  }\n`;\n\nconst RoadmapBodyContainer = styled.div`\n  width: calc(100% - 1rem);\n  padding: 1rem;\n  flex-shrink: 0;\n  > div {\n    scroll-snap-align: start;\n  }\n  transition: 200ms;\n`;\nconst RoadmapBodyCard = styled.div`\n  position: relative;\n  z-index: 1;\n  height: 160px;\n  background: #2e2350;\n  box-shadow: 4px 4px 30px rgba(0, 0, 0, 0.25);\n  border-radius: 10px 10px 10px 50px;\n  @media (max-width: 449px) {\n    margin: 0.1rem;\n  }\n\n  @media (min-width: 450px) {\n    height: 250px;\n  }\n`;\n\nconst RoadmapBodyCardOutline = styled(RoadmapBodyCard)`\n  position: relative;\n  z-index: 2;\n  bottom: 0.75rem;\n  left: 0.75rem;\n  background: transparent;\n  border: 1px dashed #ffe178;\n  box-sizing: border-box;\n  filter: drop-shadow(4px 4px 30px rgba(0, 0, 0, 0.25));\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  padding: 0.75rem;\n  box-shadow: none;\n  padding-right: 2.25rem;\n  padding-top: 2.25rem;\n  padding-left: 1rem;\n\n  @media (min-width: 1000px) {\n    padding-right: 3rem;\n    padding-left: 2rem;\n    padding-bottom: 1.5rem;\n  }\n`;\n\nconst RoadmapBodyCardChild = styled.div``;\n\nconst RoadmapBodyCardHeader = styled(RoadmapBodyCardChild)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  height: 35px;\n`;\n\nconst RoadmapBodyCardContent = styled(RoadmapBodyCardChild)`\n  text-align: end;\n`;\n\nconst RoadmapSquare = styled.img`\n  height: 28px;\n  width: 28px;\n  margin-top: 5px;\n  @media (min-width: 450px) {\n    height: 50px;\n    width: 50px;\n    margin-top: 10px;\n  }\n`;\n\nconst RoadmapButtons = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  width: 100%;\n  @media (min-width: 1000px) {\n    display: none;\n  }\n`;\n\nconst RoadmapAnchor = styled.div<{ selected: string; quarterId: string }>`\n  color: white;\n  margin: 0 0.5rem;\n  height: 15px;\n  width: 15px;\n  background-color: ${({ selected, quarterId }) =>\n    selected == quarterId ? '#180F34' : '#2e2350'};\n  border-radius: 50%;\n  border: ${({ selected, quarterId }) =>\n    selected == quarterId ? '1px solid #FFE178' : '1px solid #2e2350'};\n`;\n\nconst MobileRoadmapButtons = styled.div`\n  width: 100%;\n  @media (min-width: 450px) {\n    display: none;\n  }\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`;\n\nconst WebRoadmapButtons = styled.div`\n  width: 100%;\n  @media (max-width: 449px) {\n    display: none;\n  }\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  padding-right: 1rem;\n  > * + * {\n    margin-left: 1.5rem;\n  }\n`;\n\nconst WebRoadmapButton = styled(QuarterCell)<{\n  selected: string;\n  quarterId: string;\n}>`\n  width: 25%;\n`;\n","export default __webpack_public_path__ + \"static/media/modal-icon.33170fc8.svg\";","import { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport MailchimpSubscribe from 'react-mailchimp-subscribe';\n\nimport { CircularProgress } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport {\n  MAILCHIMP_SIGNUP_API,\n  ZETA_DISCORD_URL,\n} from '../../constants/appConstants';\nimport ModalGraphicSVG from '../../assets/modal-icon.svg';\n\nconst ENTER_KEYCODE = 13;\n\nconst CustomForm = ({ status, message, onValidated, headerText }: any) => {\n  const [email, setEmail] = useState<string>('');\n  const [subscribeStatus, setSubscribeStatus] = useState<string>('');\n\n  const handleSubmit = (e: any) => {\n    email &&\n      email.indexOf('@') > -1 &&\n      onValidated({\n        EMAIL: email,\n      });\n    setEmail('');\n  };\n\n  useEffect(() => {\n    setSubscribeStatus(status);\n  }, [status]);\n\n  const handleEnterKeyPress = (e: any) => {\n    if (e.keyCode == ENTER_KEYCODE) {\n      handleSubmit(e);\n    }\n  };\n\n  const handleCloseModal = (e: any) => {\n    if (e.target.children.length == 1) {\n      setSubscribeStatus('');\n    }\n  };\n\n  function createMarkup() {\n    return { __html: message };\n  }\n\n  return (\n    <>\n      {subscribeStatus ? (\n        <ModalBackground onClick={handleCloseModal}>\n          <Modal>\n            <CloseModalContainer>\n              <CloseIconWrapper>\n                <CloseIcon />\n              </CloseIconWrapper>\n            </CloseModalContainer>\n            <ModalContent>\n              {subscribeStatus == 'sending' ? (\n                <ProgressContainer>\n                  <CircularProgress />\n                </ProgressContainer>\n              ) : subscribeStatus == 'success' ? (\n                <SuccessContainer>\n                  <ModalText>\n                    <DefiText>Welcome to the ZetArmy</DefiText>\n                    <SubText>\n                      Thanks for subscribing to our mailing list!\n                    </SubText>\n                  </ModalText>\n                  <CommunityContainer>\n                    <CoummunitySubText>Join the Conversation</CoummunitySubText>\n                    <DiscordButtonAnchor href={ZETA_DISCORD_URL} target='_blank'>\n                      <DiscordButton>Discord</DiscordButton>\n                    </DiscordButtonAnchor>\n                  </CommunityContainer>\n                </SuccessContainer>\n              ) : (\n                // May have to refactor to prevent exposing to cross site scripting\n                <ModalText>\n                  <DefiText>Uh oh...</DefiText>\n                  <MailChimpText dangerouslySetInnerHTML={createMarkup()} />\n                </ModalText>\n              )}\n            </ModalContent>\n          </Modal>\n        </ModalBackground>\n      ) : (\n        <></>\n      )}\n      <SubscribeContainerWrapper header={headerText}>\n        <SubscribeContainer>\n          <SubscribeInput\n            id='sign-up'\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            placeholder='Email Address'\n            autoComplete='off'\n            onKeyDown={handleEnterKeyPress}\n          />\n          <SubscribeButtonContainer>\n            {email ? (\n              <SubscribeButtonGlow onClick={handleSubmit}>\n                Subscribe\n              </SubscribeButtonGlow>\n            ) : (\n              <SubscribeButton>Subscribe</SubscribeButton>\n            )}\n          </SubscribeButtonContainer>\n        </SubscribeContainer>\n      </SubscribeContainerWrapper>\n    </>\n  );\n};\n\nexport const InputButtonContainer = ({ header }: any) => {\n  return (\n    <MailchimpSubscribe\n      url={MAILCHIMP_SIGNUP_API}\n      render={({ subscribe, status, message }) => (\n        <CustomForm\n          status={status}\n          message={message}\n          onValidated={(formData: any) => subscribe(formData)}\n          headerText={header}\n        />\n      )}\n    />\n  );\n};\n\nconst SubscribeContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-basis: 50%;\n  border: 1px solid #9994ab;\n  box-sizing: border-box;\n`;\n\nconst SubscribeContainerWrapper = styled.div<{ header: string }>`\n  &:before {\n    content: '${({ header }) => (header ? header : '')}';\n    font-style: italic;\n    display: block;\n    font-size: 1rem;\n    line-height: 34px;\n    letter-spacing: 0.01em;\n    color: #fff;\n    font-weight: 400;\n    @media (max-width: 801px) {\n      text-align: center;\n    }\n  }\n  max-width: 40rem;\n  display: flex;\n  flex-direction: column;\n\n  @media (max-width: 801px) {\n    padding-left: 1rem;\n    padding-right: 1rem;\n  }\n\n  @media (max-width: 1200px) {\n    margin-top: 10%;\n  }\n`;\n\nconst SubscribeInput = styled.input`\n  width: 100%;\n  padding: 10px;\n  padding-left: 1em;\n  opacity: 1;\n\n  font-family: var(--ff-accent);\n  font-style: normal;\n  font-weight: normal;\n  outline: none;\n  background-color: transparent;\n  border: none;\n  color: var(--clr-neutral-100);\n  text-align: start;\n  font-size: 16px;\n\n  ::placeholder {\n    color: var(--clr-neutral-100);\n    font-style: italic;\n    opacity: 70%;\n    padding: 8px;\n  }\n`;\n\nconst SubscribeButton = styled.button`\n  border-radius: 0;\n  border: none;\n  padding: 10px;\n  opacity: 0.6;\n  padding-left: 1.5rem;\n  padding-right: 1.5rem;\n  font-weight: 700;\n\n  transition: transform 250ms ease-out;\n`;\n\nconst SubscribeButtonGlow = styled(SubscribeButton)`\n  opacity: 1;\n  transition: transform 250ms ease-out;\n  cursor: pointer;\n  color: #ffe178;\n\n  @media (max-width: 801px) {\n    opacity: 1;\n  }\n`;\n\nconst SubscribeButtonContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n\n  &:before {\n    content: '';\n    display: block;\n    width: 0.05rem;\n    height: 100%;\n    background: #9994ab;\n  }\n`;\n\nconst ProgressContainer = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: center;\n\n  > * {\n    color: var(--clr-neutral-100);\n  }\n`;\n\nconst ModalBackground = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: fixed;\n  z-index: 1;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.4);\n`;\n\nconst Modal = styled.div`\n  position: relative;\n  background-color: #180f34;\n  background-image: url(${ModalGraphicSVG});\n  background-repeat: no-repeat;\n  background-position: bottom right;\n  box-sizing: border-box;\n  box-shadow: 3.75087px 3.75087px 22.5052px 1.50035px rgba(0, 0, 0, 0.25);\n  border-radius: 20px;\n\n  height: 30%; /* Could be more or less, depending on screen size */\n  width: 50%;\n  min-height: 400px;\n  min-width: 300px;\n  max-height: 350px;\n  max-width: 700px;\n\n  color: var(--clr-neutral-100);\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n\n  @media (max-width: 800px) {\n    background-image: none;\n  }\n`;\n\nconst ModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 0.5rem;\n  justify-content: flex-start;\n  text-align: start;\n`;\n\nconst CloseModalContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  padding: 1rem;\n`;\n\nconst DefiText = styled.span`\n  color: #a188e3;\n  padding-left: 0.625rem;\n  padding-right: 0.625rem;\n  font-size: 2.5rem;\n  font-weight: bold;\n\n  @media (max-width: 450px) {\n    font-size: 2.125rem;\n  }\n`;\n\nconst ModalText = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  padding-left: 1rem;\n  padding-right: 1rem;\n`;\n\nconst SubText = styled.p`\n  font-size: 1.375rem;\n\n  @media (max-width: 800px) {\n    font-size: 1rem;\n  }\n`;\n\nconst CommunityContainer = styled.div`\n  margin-top: 5%;\n  padding: 1rem;\n`;\n\nconst DiscordButton = styled.button`\n  margin-left: 0.625rem;\n  padding: 0.375rem 1.5rem;\n  cursor: pointer;\n  filter: drop-shadow(4px 4px 20px rgba(255, 225, 120, 0.5));\n  border-radius: 10px;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n  transition: transform 250ms ease-out;\n  backdrop-filter: drop-shadow(2px 4px 6px black);\n\n  @media (max-width: 800px) {\n    width: 95%;\n    padding: 0.625rem 2.5rem;\n    font-size: 1.25rem;\n  }\n`;\n\nconst CoummunitySubText = styled(SubText)`\n  font-style: italic;\n`;\n\nconst SuccessContainer = styled.div``;\n\nconst DiscordButtonAnchor = styled.a`\n  text-decoration: none;\n\n  &:focus,\n  &:hover,\n  &:visited,\n  &:link,\n  &:active {\n    text-decoration: none;\n  }\n\n  @media (max-width: 800px) {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    margin-top: 0.5rem;\n  }\n`;\n\nconst CloseIconWrapper = styled.div`\n  opacity: 0.6;\n  &:hover {\n    cursor: pointer;\n    transform: scale(1.05);\n    opacity: 1;\n  }\n  transition: transform 250ms ease-out;\n\n  @media (max-width: 801px) {\n    opacity: 1;\n  }\n`;\n\nconst MailChimpText = styled.p`\n  > a {\n    color: grey;\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/footer-image.7fea5af0.svg\";","import React from 'react';\nimport styled from 'styled-components';\nimport { InputButtonContainer } from './SubscribeContainer';\nimport {\n  ZETA_TWITTER_URL,\n  ZETA_DISCORD_URL,\n  ZETA_MEDIUM_URL,\n  ZETA_INSTAGRAM_URL,\n  ZETA_GITBOOK_URL,\n  ZETA_DEMO_URL,\n  SOLANA_HACK_RECAP_URL,\n  WHATS_AN_OP_URL,\n  BINARY_OP_URL,\n} from '../../constants/appConstants';\nimport FooterImage from '../../assets/footer-image.svg';\n\nexport const FooterSection = () => {\n  return (\n    <Footer>\n      <FooterContainer>\n        <LinksSection>\n          <LinksWrapper>\n            <LinksColumnContainer>\n              <LinkContainer>\n                <HeaderText>Zeta</HeaderText>\n                <SubText href={ZETA_GITBOOK_URL} target='_blank'>Our Product</SubText>\n                <SubText href={ZETA_DEMO_URL} target='_blank'>Product Demo (Alpha)</SubText>\n                <SubText href={SOLANA_HACK_RECAP_URL} target='_blank'>\n                  Solana Season Hackathon Recap\n                </SubText>\n              </LinkContainer>\n              <LinkContainer>\n                <HeaderText>Educate</HeaderText>\n                <SubText href={WHATS_AN_OP_URL} target='_blank'>\n                  Zeta 101: What’s an Option?\n                </SubText>\n                <SubText href={BINARY_OP_URL} target='_blank'>Zeta 101: Binary Options</SubText>\n              </LinkContainer>\n            </LinksColumnContainer>\n            <LinksColumnContainer>\n              <LinkContainer>\n                <SocialMediaAnchor href={ZETA_TWITTER_URL} target='_blank'>\n                  <HeaderText>Twitter</HeaderText>\n                  <BodyText>Company & product updates... and memes.</BodyText>\n                </SocialMediaAnchor>\n              </LinkContainer>\n              <LinkContainer>\n                <SocialMediaAnchor href={ZETA_DISCORD_URL} target='_blank'>\n                  <HeaderText>Discord</HeaderText>\n                  <BodyText>\n                    Join the ZetArmy, with over 20K people and growing.\n                  </BodyText>\n                </SocialMediaAnchor>\n              </LinkContainer>\n              <LinkContainer>\n                <SocialMediaAnchor href={ZETA_MEDIUM_URL} target='_blank'>\n                  <HeaderText>Medium</HeaderText>\n                  <BodyText>\n                    Key company updates & educational content.\n                  </BodyText>\n                </SocialMediaAnchor>\n              </LinkContainer>\n              <LinkContainer>\n                <SocialMediaAnchor href={ZETA_INSTAGRAM_URL}>\n                  <HeaderText>Instagram</HeaderText>\n                  <BodyText>Updates, and more memes.</BodyText>\n                </SocialMediaAnchor>\n              </LinkContainer>\n            </LinksColumnContainer>\n          </LinksWrapper>\n          <SignUpWrapper>\n            <InputButtonContainer header='Stay in the Know.' />\n          </SignUpWrapper>\n        </LinksSection>\n        <GraphicSection></GraphicSection>\n      </FooterContainer>\n    </Footer>\n  );\n};\n\nconst Footer = styled.section`\n  margin: auto;\n  background: #180f34;\n  width: 100%;\n`;\n\nconst FooterContainer = styled.div`\n  margin: auto;\n  width: min(90%, 70.5rem);\n  height: 100%;\n  margin-top: 4rem;\n  margin-bottom: 4rem;\n\n  display: flex;\n  flex-direction: row;\n\n  @media (max-width: 800px) {\n    flex-direction: column;\n  }\n`;\n\nconst SubText = styled.a`\n  text-decoration: none;\n  font-size: 0.625rem;\n  padding: 0.625rem 0;\n  font-weight: 400;\n  color: white;\n  &:hover {\n    color: #ffe178;\n  }\n  @media (min-width: 450px) {\n    font-size: 1rem;\n  }\n`;\n\nconst SocialMediaAnchor = styled(SubText)`\n  padding-top: 0;\n`;\n\nconst HeaderText = styled.p`\n  padding: 0.625rem 0;\n  font-weight: bold;\n`;\n\nconst LinksSection = styled.div`\n  display: flex;\n  flex-grow: 1;\n  flex-direction: column;\n  margin-top: 2rem;\n  margin-bottom: 2rem;\n`;\n\nconst LinksWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nconst LinksColumnContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 50%;\n  @media (max-width: 801px) {\n    padding: 0 1rem;\n  }\n`;\n\nconst LinkContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst GraphicSection = styled.div`\n  @media (max-width: 820px) {\n    display: none;\n  }\n  width: 500px;\n  background-image: url(${FooterImage});\n  background-repeat: no-repeat;\n  background-size: contain;\n  background-position: center;\n  transform: scale(1.4) translateY(82px) translateX(56px);\n`;\n\nconst SignUpWrapper = styled.div``;\n\nconst BodyText = styled.div`\n  padding-top: 0.625rem;\n`;\n","export default __webpack_public_path__ + \"static/media/white-link-vector.91369b8e.svg\";","import React from 'react';\nimport styled from 'styled-components';\nimport LinkVector from '../../assets/white-link-vector.svg';\nimport { ZETA_GITBOOK_URL } from '../../constants/appConstants';\n\nexport const Button = () => {\n  return (\n    <WhiteButton href={ZETA_GITBOOK_URL} target='_blank'>\n      Litepaper\n      <LinkVectorSVG src={LinkVector} />\n    </WhiteButton>\n  );\n};\n\nconst WhiteButton = styled.a`\n  display: block;\n  width: 8rem;\n  text-align: center;\n  text-decoration: none;\n  border-radius: 1.5rem;\n  color: #fff;\n  padding: 0.3rem 0.4rem;\n  font-style: normal;\n  font-weight: bold;\n  font-size: 1rem;\n  line-height: 34px;\n\n  border: 1.75076px solid #ffffff;\n  box-sizing: border-box;\n  filter: drop-shadow(2.33435px 2.33435px 11.6717px rgba(255, 225, 120, 0.5));\n  border-radius: 5.83587px;\n\n  transition: transform 250ms ease-out;\n  &:hover {\n    transform: scale(1.05);\n  }\n\n  @media (max-width: 801px) {\n    margin-top: 0.5rem;\n    margin-left: 0.5rem;\n  }\n`;\n\nconst LinkVectorSVG = styled.img`\n  padding-left: 3px;\n  padding-bottom: 3px;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Button } from './Button';\n\nexport const ProductInfoSection = () => {\n  return (\n    <ProductInfoContainer>\n      <ProductTextContainer>\n        <HeaderText>About Zeta</HeaderText>\n        <BodyText>\n          Our mission is to provide the ecosystem with a bulletproof options\n          platform, such that anyone can hedge, speculate, and take opinions on\n          a limitless variety of market movements.\n        </BodyText>\n      </ProductTextContainer>\n      <ButtonContainer>\n        <Button />\n      </ButtonContainer>\n    </ProductInfoContainer>\n  );\n};\n\nconst ProductInfoContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 0 1rem;\n  @media (min-width: 1000px) {\n    justify-content: flex-end;\n    align-items: flex-end;\n    width: 40%;\n    padding: 0;\n  }\n`;\n\nconst ProductTextContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n\n  @media (min-width: 1000px) {\n    text-align: end;\n    margin-bottom: 1rem;\n  }\n`;\n\nconst HeaderText = styled.h1`\n  @media (min-width: 450px) {\n    font-size: 60px;\n  }\n`;\n\nconst BodyText = styled.p`\n  margin: 0;\n  padding: 0;\n  font-size: 1rem;\n  line-height: 34px;\n  letter-spacing: 0.01em;\n  @media (max-width: 450px) {\n    font-size: 0.625rem;\n    line-height: 25px;\n  }\n`;\n\nconst ButtonContainer = styled.div`\n  margin-top: 0.5rem;\n  margin-bottom: 1rem;\n  @media (min-width: 450px) {\n    margin-bottom: 2rem;\n  }\n  @media (min-width: 1000px) {\n    margin-bottom: 1rem;\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/solana.b612f140.svg\";","export default __webpack_public_path__ + \"static/media/serum.b9084da5.svg\";","import styled from \"styled-components\";\n\nimport SolanaLogo from \"../../assets/solana.svg\";\nimport SerumLogo from \"../../assets/serum.svg\";\nimport { SOLANA_URL, SERUM_URL } from \"../../constants/appConstants\";\n\nexport const SolanaSerumSection = () => {\n  return (\n    <FooterContainer>\n      <FooterText>Built On</FooterText>\n      <LogosContainer>\n        <LogosWrapper>\n          <SecondaryLogoAnchor href={SOLANA_URL} target=\"_blank\">\n            <SecondaryLogo src={SolanaLogo} alt=\"Solana logo\" />\n          </SecondaryLogoAnchor>\n          <SecondaryLogoAnchor href={SERUM_URL} target=\"_blank\">\n            <SecondaryLogo src={SerumLogo} alt=\"Serum logo\" />\n          </SecondaryLogoAnchor>\n        </LogosWrapper>\n      </LogosContainer>\n    </FooterContainer>\n  );\n};\n\nconst FooterContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  width: fit-content;\n  margin-top: 5px;\n\n  @media (max-width: 801px) {\n    justify-content: center;\n    margin-bottom: 0;\n  }\n`;\n\nconst SecondaryLogo = styled.img`\n  height: 28px;\n  width: 28px;\n  padding: 0.4em;\n  padding-bottom: 0.2em;\n\n  &:hover {\n    transform: scale(1.15);\n  }\n  transition: transform 250ms ease-out;\n\n  @media (max-width: 801px) {\n    height: 1.25rem;\n    width: 1.25rem;\n    padding: 0.3em;\n    padding-bottom: 0.15em;\n  }\n`;\n\nconst LogosContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  &:after {\n    content: \"\";\n    display: block;\n    width: calc(100% - 1rem);\n    height: 1px;\n    background: var(--clr-neutral-100);\n    box-shadow: 3px 3px 10px rgba(253, 92, 106, 0.6);\n  }\n`;\n\nconst SecondaryLogoAnchor = styled.a`\n  margin: 0;\n`;\n\nconst LogosWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nconst FooterText = styled.p`\n  padding: 0;\n  padding-right: 0.5rem;\n  @media (max-width: 801px) {\n    padding-right: 0.25rem;\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/hero-image.775adb39.svg\";","export default __webpack_public_path__ + \"static/media/link-vector.77f22d6c.svg\";","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { ZETA_GITBOOK_URL, ZETA_APP_URL } from \"../../constants/appConstants\";\nimport { SolanaSerumSection } from \"./SolanaSerumContainer\";\nimport HeroImageSVG from \"../../assets/hero-image.svg\";\nimport LinkVector from \"../../assets/link-vector.svg\";\nexport const HeaderGraphicSection = () => {\n  return (\n    <SplitPaneSection>\n      <HeaderPaneSection>\n        <HeaderPaneContainer>\n          <PaneHeaderContainer>\n            <HeaderText>\n              Revolutionizing<br></br>Options Markets\n            </HeaderText>\n            <SubtitleText>\n              A World First in <b>Undercollateralized Trading Platforms</b> in\n              DeFi.\n            </SubtitleText>\n            <SolanaSerumSection />\n            <LitepaperAnchor href={ZETA_GITBOOK_URL} target=\"_blank\">\n              Litepaper\n              <LinkSVG src={LinkVector} />\n            </LitepaperAnchor>\n          </PaneHeaderContainer>\n        </HeaderPaneContainer>\n\n        <HeaderPaneContainer>\n          <Link to=\"/competition-form\" style={{ textDecoration: \"none\" }}>\n            <AppButton>Enter Trading Comp</AppButton>\n          </Link>\n          <SubtitleText>\n            Practice Trading{\" \"}\n            <PracticeTradingAnchor href={ZETA_APP_URL}>\n              here\n            </PracticeTradingAnchor>\n            .\n          </SubtitleText>\n        </HeaderPaneContainer>\n      </HeaderPaneSection>\n      <GraphicPaneSection />\n    </SplitPaneSection>\n  );\n};\n\nconst PaneSection = styled.section`\n  margin: auto;\n  width: min(90%, 70.5rem);\n`;\n\nconst HeaderPaneSection = styled.div`\n  position: relative;\n  z-index: 3;\n  min-width: 40%;\n  @media (min-width: 1000px) {\n    margin-right: 2rem;\n    min-width: 468px;\n  }\n`;\n\nconst HeaderPaneContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  @media (min-width: 801px) {\n    margin-top: 4rem;\n    margin-bottom: 2rem;\n  }\n\n  @media (min-width: 1200px) {\n    align-items: flex-start;\n    justify-content: center;\n  }\n`;\n\nconst PaneHeaderContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  @media (max-width: 45em) {\n    word-wrap: break-word;\n  }\n\n  @media (max-width: 1200px) {\n    align-items: center;\n    text-align: center;\n  }\n`;\n\nconst SplitPaneSection = styled(HeaderPaneSection)`\n  display: flex;\n  flex-direction: column;\n  margin: 0;\n  padding: 0;\n  margin-left: calc((100% - min(90%, 70.5rem)) / 2);\n\n  @media (max-width: 801px) {\n    margin-right: calc((100% - min(90%, 70.5rem)) / 2);\n  }\n\n  @media (min-width: 1200px) {\n    flex-direction: row;\n    justify-content: space-between;\n  }\n`;\n\nconst GraphicPaneSection = styled(PaneSection)`\n  position: relative;\n  z-index: 1;\n  background-image: url(${HeroImageSVG});\n  background-repeat: no-repeat;\n  background-position: center right;\n  background-size: contain;\n  height: 60vh;\n  max-height: 750px;\n\n  @media (max-width: 801px) {\n    transform: scale(1.5);\n    left: 60px;\n    max-height: 900px;\n  }\n\n  @media (max-width: 450px) {\n    top: -25px;\n    max-height: 600px;\n  }\n\n  @media (min-width: 801px) {\n    top: 0;\n    height: 100vh;\n  }\n\n  @media (min-width: 1550px) {\n    margin-top: 0%;\n    margin-left: 0%;\n    width: 50vw;\n    background-position: left;\n  }\n`;\n\nconst LitepaperAnchor = styled.a`\n  display: block;\n  text-decoration: none;\n  color: #ffe178;\n  font-weight: 700;\n  width: fit-content;\n  transition: transform 250ms ease-out;\n  cursor: pointer;\n  &:hover {\n    transform: scale(1.05);\n  }\n  margin-top: 0.5rem;\n`;\n\nconst LinkSVG = styled.img`\n  padding-bottom: 2px;\n  padding-left: 3px;\n`;\n\nconst SubtitleText = styled.p`\n  margin: 0;\n  padding: 0;\n  line-height: 22px;\n  font-weight: 400;\n\n  @media (max-width: 801px) {\n    padding-left: 20px;\n    padding-right: 20px;\n  }\n`;\n\nconst HeaderText = styled.h1``;\n\nconst AppButton = styled.a`\n  display: block;\n  width: 13rem;\n  text-align: center;\n  text-decoration: none;\n  border-radius: 1.5rem;\n  color: #2e2350;\n  padding: 0.3rem 2.8rem;\n  font-style: normal;\n  font-weight: bold;\n  font-size: 1rem;\n  line-height: 38px;\n  margin-bottom: 0.5rem;\n  cursor: pointer;\n\n  background: linear-gradient(94.82deg, #b39bff 9.15%, #d6cbf8 115.01%);\n  box-shadow: 4px 4px 30px rgba(255, 255, 255, 0.1);\n  border-radius: 10px;\n\n  transition: transform 250ms ease-out;\n  &:hover {\n    transform: scale(1.05);\n  }\n\n  @media (max-width: 801px) {\n    margin-top: 2rem;\n    margin-left: 0.5rem;\n  }\n`;\n\nconst PracticeTradingAnchor = styled.a`\n  color: white;\n  text-decoration: none;\n  display: inline-block;\n  font-style: italic;\n  font-weight: bold;\n  cursor: pointer;\n  transition: 250ms;\n  &:hover {\n    color: #ffe178;\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/trading-banner-mobile.bc971d33.svg\";","export default __webpack_public_path__ + \"static/media/trading-banner-web-left.e6ff68d6.svg\";","export default __webpack_public_path__ + \"static/media/trading-banner-web-right.d63160fc.svg\";","import styled from \"styled-components\";\nimport MobileBannerSVG from \"../../assets/trading-banner-mobile.svg\";\nimport WebBannerLeftSVG from \"../../assets/trading-banner-web-left.svg\";\nimport WebBannerRightSVG from \"../../assets/trading-banner-web-right.svg\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const Banner = () => {\n  const history = useHistory();\n\n  const handleClick = () => {\n    history.push(\"/competition-form\");\n  };\n  return (\n    <BannerContainer onClick={() => handleClick()}>\n      <LargerScreenWrapper>\n        <LeftContainer>\n          <SmallScreenText>\n            <b>\n              Enter our<br></br>Trading Comp\n            </b>\n            <br></br>31 July - 2 Aug\n          </SmallScreenText>\n          <LargerScreenText>\n            <b>Enter our Trading Comp</b>\n            <br></br>31 JUL 10:00 UTC - 2 AUG 10:00 UTC\n          </LargerScreenText>\n        </LeftContainer>\n        <RightContainer>\n          <SmallScreenText>\n            Win <b>$SOL</b>, a{\" \"}\n            <b>\n              Zeta x<br></br>Solarian NFT\n            </b>{\" \"}\n            & more...\n          </SmallScreenText>\n          <LargerScreenText>\n            Win <b>$SOL</b>, a <b>Zeta x Solarian NFT</b> & more...\n          </LargerScreenText>\n        </RightContainer>\n      </LargerScreenWrapper>\n    </BannerContainer>\n  );\n};\n\nconst BannerContainer = styled.div`\n  height: 80px;\n  width: 100%;\n  position: fixed;\n  z-index: 4;\n  background-image: url(${MobileBannerSVG});\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n\n  color: #292044;\n  font-weight: 400;\n  cursor: pointer;\n  transition: 250ms ease-out;\n  &:hover {\n    opacity: 0.7;\n  }\n  @media (min-width: 450px) {\n    height: 90px;\n  }\n\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n\n  @media (min-width: 1000px) {\n    background-image: none;\n    background: #d8d6ff;\n  }\n`;\n\nconst Container = styled.div`\n  padding: 8px;\n  @media (min-width: 450px) {\n    padding: 1rem;\n  }\n  @media (min-width: 700px) {\n    padding: 0;\n  }\n`;\nconst LeftContainer = styled(Container)`\n  @media (min-width: 1000px) {\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    flex-grow: 0.5;\n\n    background-image: url(${WebBannerLeftSVG});\n    background-size: auto;\n    background-position: center;\n    background-repeat: no-repeat;\n    background-position: right;\n  }\n`;\n\nconst RightContainer = styled(Container)`\n  text-align: end;\n  @media (min-width: 1000px) {\n    padding-bottom: 22px;\n    display: flex;\n    flex-direction: row;\n    flex-grow: 0.5;\n    justify-content: flex-end;\n    align-items: center;\n    height: 100%;\n\n    background-image: url(${WebBannerRightSVG});\n    background-size: auto;\n    background-position: center;\n    background-repeat: no-repeat;\n    background-position: bottom 1px right;\n  }\n`;\n\nconst SmallScreenText = styled.p`\n  margin: 0;\n  padding: 0;\n  @media (min-width: 1000px) {\n    display: none;\n  }\n`;\n\nconst LargerScreenText = styled(SmallScreenText)`\n  @media (max-width: 1000px) {\n    display: none;\n  }\n  @media (min-width: 1000px) {\n    display: block;\n  }\n`;\n\nconst LargerScreenWrapper = styled.div`\n  margin: 0;\n  padding: 0;\n\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n\n  @media (min-width: 700px) {\n    margin: auto;\n    width: min(90%, 70.5rem);\n  }\n\n  @media (min-width: 1000px) {\n    margin: 0 auto;\n  }\n`;\n","import styled from \"styled-components\";\nimport { TopNavBar } from \"./TopNavBar\";\nimport { CardsSection } from \"./Cards\";\nimport { RoadmapSection } from \"./Roadmap\";\nimport { FooterSection } from \"./FooterSection\";\nimport { ProductInfoSection } from \"./ProductInfo\";\nimport { HeaderGraphicSection } from \"./HeaderGraphicSection\";\nimport { Banner } from \"../competition/Banner\";\n\nexport const LandingContainer = () => {\n  return (\n    <PaneBody>\n      <Banner />\n      <PaneSection>\n        <TopNavBar />\n      </PaneSection>\n\n      <HeaderGraphicSection />\n\n      <ProductSection>\n        <CardsSection />\n        <ProductInfoSection />\n      </ProductSection>\n\n      <RoadmapSection />\n\n      <FooterSection />\n    </PaneBody>\n  );\n};\n\nconst PaneBody = styled.body`\n  font-family: var(--ff-accent);\n  font-weight: 200;\n  color: var(--clr-neutral-100);\n  min-height: 100vh;\n  position: relative;\n  width: 100%;\n  overflow-x: hidden;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nconst PaneSection = styled.section`\n  margin: auto;\n  width: min(90%, 70.5rem);\n`;\n\nconst ProductSection = styled(PaneSection)`\n  display: flex;\n  flex-direction: row;\n\n  @media (max-width: 1000px) {\n    flex-direction: column-reverse;\n  }\n\n  @media (min-width: 801px) {\n    margin-top: 6rem;\n    margin-bottom: 6rem;\n  }\n`;\n","import { PageContainer } from '../components/common/PageContainer';\nimport { LandingContainer } from '../components/landing';\n\nexport const LandingPage = () => {\n  return (\n    <PageContainer>\n      <LandingContainer />\n    </PageContainer>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/arrow-icon.5fb592ca.svg\";","import styled from \"styled-components\";\n\nexport const LoadingSpinner = () => {\n  return (\n    <LdsRing>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </LdsRing>\n  );\n};\n\nconst LdsRing = styled.div`\n  display: inline-block;\n  position: relative;\n  width: 40px;\n  height: 40px;\n\n  div {\n    box-sizing: border-box;\n    display: block;\n    position: absolute;\n    width: 32px;\n    height: 32px;\n    margin: 4px;\n    border: 4px solid #fff;\n    border-radius: 50%;\n    animation: lds-ring 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\n    border-color: #fff transparent transparent transparent;\n  }\n  div:nth-child(1) {\n    animation-delay: -0.45s;\n  }\n  div:nth-child(2) {\n    animation-delay: -0.3s;\n  }\n  div:nth-child(3) {\n    animation-delay: -0.15s;\n  }\n  @keyframes lds-ring {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n","import { useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport {\n  GOOGLE_SHEETS_API,\n  RECAPTCHA_PUBLIC_KEY,\n} from \"../../constants/appConstants\";\nimport ArrowSVG from \"../../assets/arrow-icon.svg\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport { Formik, Field, Form, useField } from \"formik\";\nimport * as Yup from \"yup\";\nimport { LoadingSpinner } from \"../Loading\";\n\ninterface FormData {\n  choice: string;\n  handle: string;\n  address: string;\n  email: string;\n}\n\ninterface Props {\n  handleOpenModal: any;\n}\n\nconst MyTextInput = ({ label, ...props }: any) => {\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\n  // which we can spread on <input>. We can use field meta to show an error\n  // message if the field is invalid and it has been touched (i.e. visited)\n  const [field, meta] = useField(props);\n  return (\n    <div\n      className={\n        label !== \"\" ? \"text-input-container\" : \"small-input-container\"\n      }\n    >\n      <label htmlFor={props.id || props.name}>{label}</label>\n      <input className=\"text-input\" autocomplete=\"off\" {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <div className=\"error\">{meta.error}</div>\n      ) : null}\n    </div>\n  );\n};\n\nexport const FormSection: React.FC<Props> = ({ handleOpenModal }: Props) => {\n  const recaptchaRef = useRef<ReCAPTCHA>();\n  const [loading, setLoading] = useState<boolean>(false);\n  const [remindCaptcha, setRemindCaptcha] = useState<boolean>(false);\n\n  const handleSubmitCheck = () => {\n    // @ts-ignore\n    if (!recaptchaRef.current.getValue()) {\n      setRemindCaptcha(true);\n    } else {\n      setRemindCaptcha(false);\n    }\n  };\n\n  const handleSubmission = async (values: FormData) => {\n    let formData = new FormData();\n\n    formData.append(\n      \"We will need to use either you Twitter or Discord to identify you in the case that you win - please select which one you prefer using:\",\n      values.choice\n    );\n    formData.append(\n      \"Please enter you twitter or discord handle.\",\n      values.handle\n    );\n    formData.append(\n      \"Please enter your Solana public address that you will be using to compete:\",\n      values.address\n    );\n    formData.append(\n      \"Please enter an email that we can use to contact you\",\n      values.email\n    );\n\n    await fetch(GOOGLE_SHEETS_API, {\n      method: \"POST\",\n      body: formData,\n    })\n      .then((response) => {\n        console.log(response, \"response\");\n        setLoading(false);\n        handleOpenModal(true);\n      })\n      .catch((error) => console.error(\"Error!\", error.message));\n  };\n\n  return (\n    <FormContainer>\n      <FormContent>\n        <HeaderText>Sign Up</HeaderText>\n        <Formik\n          initialValues={{\n            choice: \"\",\n            handle: \"\",\n            address: \"\",\n            email: \"\",\n          }}\n          validationSchema={Yup.object({\n            choice: Yup.string()\n              .oneOf([\"Twitter\", \"Discord\"], \"Invalid Choice\")\n              .required(\"Required\"),\n            handle: Yup.string().required(\"Required\"),\n            address: Yup.string()\n              .min(32, \"Must be at minimum 32 characters\")\n              .max(44, \"Must be at maximum 44 characters\")\n              .required(\"Required\"),\n            email: Yup.string()\n              .email(\"Invalid email address\")\n              .required(\"Required\"),\n          })}\n          onSubmit={(values) => {\n            // @ts-ignore\n            if (!recaptchaRef.current.getValue()) {\n              return;\n            } else {\n              setLoading(true);\n              handleSubmission(values);\n            }\n            console.log(\"Form submitted\");\n          }}\n        >\n          {({ values }) => (\n            <Form className=\"form\">\n              <label className=\"platform-header-label\">\n                Where do you prefer us to get in touch?\n              </label>\n              <div className=\"platform-radio-group\" role=\"group\">\n                <label style={{ display: \"flex\", flexDirection: \"row\" }}>\n                  <Field\n                    className=\"radio\"\n                    type=\"radio\"\n                    name=\"choice\"\n                    value=\"Twitter\"\n                  />\n                  Twitter\n                </label>\n                <label style={{ display: \"flex\", flexDirection: \"row\" }}>\n                  <Field\n                    className=\"radio\"\n                    type=\"radio\"\n                    name=\"choice\"\n                    value=\"Discord\"\n                  />\n                  Discord\n                </label>\n              </div>\n\n              <MyTextInput\n                label=\"\"\n                name=\"handle\"\n                type=\"text\"\n                placeholder={\n                  values.choice !== \"\"\n                    ? values.choice + \" Handle\"\n                    : \"Please Select A Platform Above\"\n                }\n              />\n              <MyTextInput\n                label=\"Solana Public Address\"\n                name=\"address\"\n                type=\"text\"\n                placeholder=\"kxhe...39d\"\n              />\n              <MyTextInput\n                label=\"Email Address\"\n                name=\"email\"\n                type=\"text\"\n                placeholder=\"example@gmail.com\"\n              />\n              <ReCAPTCHAContainer>\n                <ReCAPTCHA\n                  sitekey={RECAPTCHA_PUBLIC_KEY}\n                  // @ts-ignore\n                  ref={recaptchaRef}\n                  type=\"image\"\n                  onChange={() => {\n                    setRemindCaptcha(false);\n                  }}\n                />\n                {remindCaptcha && (\n                  <WarningText>Please complete the reCAPTCHA.</WarningText>\n                )}\n              </ReCAPTCHAContainer>\n              <SubmitButton type=\"submit\" onClick={() => handleSubmitCheck()}>\n                {loading ? (\n                  <LoadingSpinner />\n                ) : (\n                  <>\n                    Sign Up <ArrowImg src={ArrowSVG} />\n                  </>\n                )}\n              </SubmitButton>\n            </Form>\n          )}\n        </Formik>\n      </FormContent>\n    </FormContainer>\n  );\n};\n\nconst FormContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 2rem;\n  @media (min-width: 1200px) {\n    align-items: flex-end;\n  }\n`;\n\nconst FormContent = styled.div`\n  @media (min-width: 700px) {\n    background: #464370;\n    border-radius: 15px;\n    padding: 2rem 3rem;\n  }\n`;\n\nconst SubmitButton = styled.button`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n\n  margin: 1rem 0;\n  width: 13rem;\n  text-align: center;\n  text-decoration: none;\n  border-radius: 1.5rem;\n  color: #2e2350;\n  padding: 0.3rem 2.8rem;\n  font-style: normal;\n  font-weight: bold;\n  font-size: 1rem;\n  line-height: 40px;\n  cursor: pointer;\n  border: none;\n\n  background: linear-gradient(94.82deg, #b39bff 9.15%, #d6cbf8 115.01%);\n  box-shadow: 4px 4px 30px rgba(255, 255, 255, 0.1);\n  border-radius: 10px;\n\n  transition: transform 250ms ease-out;\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n\nconst HeaderText = styled.h1`\n  text-align: center;\n  width: 100%;\n  @media (min-width: 450px) {\n    margin-bottom: 2rem;\n  }\n\n  @media (min-width: 1200px) {\n    margin-bottom: 2.5rem;\n  }\n`;\n\nconst WarningText = styled.div`\n  color: #ff5f5f;\n  font-weight: 400;\n  font-size: 14px;\n`;\n\nconst ReCAPTCHAContainer = styled.div`\n  height: 90px;\n  @media (min-width: 1200px) {\n    margin-top: 1.5rem;\n    margin-bottom: 2.5rem;\n  }\n`;\n\nconst ArrowImg = styled.img`\n  height: 10px;\n  width: 15px;\n  margin-left: 5px;\n`;\n","export default __webpack_public_path__ + \"static/media/prizes-banner.cc7d4f33.svg\";","export default __webpack_public_path__ + \"static/media/planet-icon.da44cefc.svg\";","import styled from \"styled-components\";\nimport PrizesBannerSVG from \"../../assets/prizes-banner.svg\";\nimport PlanetSVG from \"../../assets/planet-icon.svg\";\n\nexport const CompInfoSection = () => {\n  return (\n    <CompInfoContainer>\n      <InfoSection>\n        <HeaderText>\n          Enter the <GradientHeaderText>Zetaverse</GradientHeaderText>\n        </HeaderText>\n        <MobileTimeText>31 JUL 10:00 UTC - 2 AUG 10:00 UTC</MobileTimeText>\n        <WebTimeText>31 July 10:00 UTC - 2 August 10:00 UTC</WebTimeText>\n        <SubText>\n          Put your trading skills to the test.<br></br>Trader with highest\n          profit wins.\n        </SubText>\n        <SubText>\n          <b>Join Zeta’s first-ever trading competition.</b> Pit yourself\n          against 3 celebrity traders & get a chance to win these{\" \"}\n          <b>epic prizes</b>:\n        </SubText>\n      </InfoSection>\n      <PrizesSection>\n        <HeaderText>Prizes</HeaderText>\n        <PrizesBanner>\n          <PlanetGraphic src={PlanetSVG} />\n          <FirstPrizeWrapper>\n            <ThinnerSubText>\n              <b>1st: </b>Solarians x Zeta NFT\n            </ThinnerSubText>\n            <FirstPrizeThinnerSubText>\n              10 SOL + $100 PAI\n            </FirstPrizeThinnerSubText>\n          </FirstPrizeWrapper>\n          <ThinnerSubText>\n            <b>2nd:</b> 10 SOL + $50 PAI<br></br>\n          </ThinnerSubText>\n          <ThinnerSubText>\n            <b>3rd - 5th:</b> 5 SOL + $20 PAI\n          </ThinnerSubText>\n          <ThinnerSubText>\n            <b>6th - 10th:</b> 2 SOL + $20 PAI\n          </ThinnerSubText>\n        </PrizesBanner>\n        <EndingText>Got what it takes?</EndingText>\n      </PrizesSection>\n    </CompInfoContainer>\n  );\n};\n\nconst CompInfoContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  @media (min-width: 1200px) {\n    align-items: flex-start;\n    text-align: start;\n    margin-bottom: 2rem;\n  }\n`;\n\nconst InfoSection = styled(CompInfoContainer)`\n  margin-bottom: 0rem;\n`;\nconst PrizesSection = styled(CompInfoContainer)`\n  margin-bottom: 0rem;\n  font-family: Poppins, sans serif;\n`;\n\nconst HeaderText = styled.h1`\n  margin: 0;\n`;\nconst GradientHeaderText = styled(HeaderText)`\n  display: inline-block;\n  background: linear-gradient(180deg, #b39bff 0%, #ffffff 100%);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n`;\nconst SubText = styled.p`\n  margin: 0;\n  padding: 0;\n  margin-bottom: 1rem;\n  max-width: 400px;\n  line-height: 24px;\n\n  @media (min-width: 1200px) {\n    max-width: none;\n    line-height: 26px;\n  }\n`;\n\nconst EndingText = styled(SubText)`\n  margin: 1rem 0;\n  font-weight: bold;\n  font-style: italic;\n`;\n\nconst MobileTimeText = styled(SubText)`\n  @media (min-width: 450px) {\n    display: none;\n  }\n`;\nconst WebTimeText = styled(SubText)`\n  @media (max-width: 450px) {\n    display: none;\n  }\n`;\n\nconst ThinnerSubText = styled(SubText)`\n  font-weight: 400;\n  margin-bottom: 0;\n`;\n\nconst FirstPrizeThinnerSubText = styled(ThinnerSubText)`\n  text-align: center;\n  margin-bottom: 0.5rem;\n  @media (max-width: 450px) {\n    margin-bottom: 0.25rem;\n  }\n`;\n\nconst FirstPrizeWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding-bottom: 0.5rem;\n  @media (max-width: 450px) {\n    padding-bottom: 0.25rem;\n  }\n  &:after {\n    content: \"\";\n    display: block;\n    position: relative;\n    left: 70px;\n    width: 48px;\n    height: 0px;\n    border: 2px solid #fc4b7c;\n    box-shadow: 2px 2px 10px rgba(255, 255, 255, 0.15);\n    border-radius: 5px;\n  }\n`;\n\nconst PrizesBanner = styled.div`\n  width: 100vw;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  color: #292044;\n  background: url(${PrizesBannerSVG});\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center;\n  height: 180px;\n  @media (min-width: 450px) {\n    height: 280px;\n  }\n  padding: 1rem 0;\n\n  @media (min-width: 700px) {\n    background: none;\n    color: #d8d6ff;\n    width: 400px;\n\n    border: 2px solid #b39bff;\n    box-sizing: border-box;\n    filter: drop-shadow(3px 3px 20px rgba(255, 255, 255, 0.4));\n    border-radius: 5px;\n    margin: 1rem;\n  }\n\n  @media (min-width: 1200px) {\n    margin: 1rem 0;\n  }\n`;\n\nconst PlanetGraphic = styled.img`\n  @media (max-width: 700px) {\n    display: none;\n  }\n`;\n","import styled from \"styled-components\";\nimport ArrowSVG from \"../../assets/arrow-icon.svg\";\nimport WhiteLinkSVG from \"../../assets/white-link-vector.svg\";\nimport {\n  ZETA_APP_URL,\n  ZETA_TWITTER_URL,\n  ZETA_DISCORD_URL,\n} from \"../../constants/appConstants\";\nexport const SignUpModal = () => {\n  return (\n    <ModalContainer>\n      <Modal>\n        <ModalContent>\n          <TextContainer>\n            <HeaderText>Thanks for signing up!</HeaderText>\n            <SubText>You’re good to go for our trading competition.</SubText>\n            <SubText>We’ll be in touch via email over the next week!</SubText>\n            <SubText>\n              <b>Stay in the know:</b>\n            </SubText>\n            <SocialMediaAnchor href={ZETA_TWITTER_URL} target=\"_blank\">\n              Twitter\n              <WhiteLinkImg src={WhiteLinkSVG} />\n            </SocialMediaAnchor>\n            <SocialMediaAnchor href={ZETA_DISCORD_URL} target=\"_blank\">\n              Discord\n              <WhiteLinkImg src={WhiteLinkSVG} />\n            </SocialMediaAnchor>\n            <SubText>\n              If you want to try your hand at making some trades, you can\n              practice on our Binary Options platform here.\n            </SubText>\n          </TextContainer>\n          <TradingButton href={ZETA_APP_URL}>\n            Trade <ArrowImg src={ArrowSVG} />\n          </TradingButton>\n        </ModalContent>\n      </Modal>\n    </ModalContainer>\n  );\n};\nconst ModalContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: fixed;\n  z-index: 5;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(255, 255, 255, 0.7);\n`;\n\nconst Modal = styled.div`\n  position: relative;\n  background-color: #180f34;\n  box-sizing: border-box;\n  box-shadow: 3.75087px 3.75087px 22.5052px 1.50035px rgba(0, 0, 0, 0.25);\n  border-radius: 20px;\n\n  height: 30%; /* Could be more or less, depending on screen size */\n  width: 50%;\n  min-height: 400px;\n  min-width: 300px;\n  max-height: 400px;\n  max-width: 500px;\n\n  color: var(--clr-neutral-100);\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  @media (min-width: 700px) {\n    height: 400px;\n    width: 500px;\n  }\n`;\n\nconst ModalContent = styled.div`\n  padding: 2rem 0.75rem;\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  align-items: center;\n  height: 100%;\n  justify-content: space-between;\n\n  @media (min-width: 450px) {\n    padding: 2rem;\n  }\n`;\n\nconst HeaderText = styled.h1`\n  font-size: 20px;\n\n  @media (min-width: 700px) {\n    font-size: 28px;\n  }\n`;\nconst SubText = styled.p`\n  font-size: 12px;\n\n  @media (min-width: 700px) {\n    font-size: 16px;\n  }\n`;\nconst TradingButton = styled.a`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  width: 5rem;\n  text-align: center;\n  text-decoration: none;\n  border-radius: 1.5rem;\n  color: #2e2350;\n  padding: 0.3rem 2.8rem;\n  font-style: normal;\n  font-weight: bold;\n  font-size: 1rem;\n  line-height: 38px;\n  margin-bottom: 0.5rem;\n  cursor: pointer;\n\n  background: linear-gradient(94.82deg, #b39bff 9.15%, #d6cbf8 115.01%);\n  box-shadow: 4px 4px 30px rgba(255, 255, 255, 0.1);\n  border-radius: 10px;\n\n  transition: 250ms ease-in;\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n\nconst ArrowImg = styled.img`\n  height: 10px;\n  width: 15px;\n  margin-left: 5px;\n\n  @media (min-width: 700px) {\n    height: 12px;\n    width: 18px;\n  }\n`;\n\nconst SocialMediaAnchor = styled.a`\n  text-decoration: none;\n  font-weight: 400;\n  color: white;\n  font-size: 12px;\n  margin-bottom: 0.25rem;\n  &:hover {\n    color: #ffe178;\n  }\n  @media (min-width: 450px) {\n    font-size: 1rem;\n  }\n`;\n\nconst TextContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst WhiteLinkImg = styled.img`\n  height: 5px;\n  width: 5px;\n  padding-bottom: 4px;\n  padding-left: 3px;\n\n  @media (min-width: 700px) {\n    height: 8px;\n    width: 8px;\n  }\n`;\n","import { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { TopNavBar } from \"../landing/TopNavBar\";\nimport { FormSection } from \"./FormSection\";\nimport { CompInfoSection } from \"./CompInfoSection\";\nimport { SignUpModal } from \"./SignUpModal\";\nimport { Banner } from \"./Banner\";\nimport \"./index.css\";\n\nexport const CompetitionContainer = () => {\n  const [openModal, setOpenModal] = useState<boolean>(false);\n  const handleOpenModal = (bool: boolean) => {\n    setOpenModal(bool);\n  };\n  return (\n    <PaneBody>\n      <Banner />\n      {openModal && <SignUpModal />}\n      <PaneSection>\n        <TopNavBar />\n      </PaneSection>\n      <CompetitionSection>\n        <CompInfoSection />\n        <FormSection handleOpenModal={handleOpenModal} />\n      </CompetitionSection>\n    </PaneBody>\n  );\n};\n\nconst PaneBody = styled.body`\n  font-family: var(--ff-accent);\n  font-weight: 200;\n  color: var(--clr-neutral-100);\n  background: #180f34;\n  min-height: 100vh;\n  position: relative;\n  width: 100%;\n  overflow-x: hidden;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nconst PaneSection = styled.section`\n  margin: auto;\n  width: min(90%, 70.5rem);\n`;\n\nconst CompetitionSection = styled(PaneSection)`\n  display: flex;\n  flex-grow: 1;\n  flex-direction: column;\n  @media (min-width: 1200px) {\n    flex-direction: row;\n    align-items: baseline;\n  }\n`;\n","import { PageContainer } from \"../components/common/PageContainer\";\nimport { CompetitionContainer } from \"../components/competition\";\n\nexport const CompetitionPage = () => {\n  return (\n    <PageContainer>\n      <CompetitionContainer />\n    </PageContainer>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const LoadingPage = () => {\n  return (\n    <LoadingPageContainer>\n      <LdsGrid>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n      </LdsGrid>\n    </LoadingPageContainer>\n  );\n};\n\nconst LoadingPageContainer = styled.div`\n  display: flex;\n  z-index: 10;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  position: fixed;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: #180f34;\n`;\n\nconst LdsGrid = styled.div`\n  display: inline-block;\n  position: relative;\n  width: 80px;\n  height: 80px;\n  div {\n    position: absolute;\n    width: 16px;\n    height: 16px;\n    border-radius: 50%;\n    background: #ff69ff;\n    animation: lds-grid 1.2s linear infinite;\n  }\n  div:nth-child(1) {\n    top: 8px;\n    left: 8px;\n    animation-delay: 0s;\n  }\n  div:nth-child(2) {\n    top: 8px;\n    left: 32px;\n    animation-delay: -0.4s;\n  }\n  div:nth-child(3) {\n    top: 8px;\n    left: 56px;\n    animation-delay: -0.8s;\n  }\n  div:nth-child(4) {\n    top: 32px;\n    left: 8px;\n    animation-delay: -0.4s;\n  }\n  div:nth-child(5) {\n    top: 32px;\n    left: 32px;\n    animation-delay: -0.8s;\n  }\n  div:nth-child(6) {\n    top: 32px;\n    left: 56px;\n    animation-delay: -1.2s;\n  }\n  div:nth-child(7) {\n    top: 56px;\n    left: 8px;\n    animation-delay: -0.8s;\n  }\n  div:nth-child(8) {\n    top: 56px;\n    left: 32px;\n    animation-delay: -1.2s;\n  }\n  div:nth-child(9) {\n    top: 56px;\n    left: 56px;\n    animation-delay: -1.6s;\n  }\n  @keyframes lds-grid {\n    0%,\n    100% {\n      opacity: 1;\n    }\n    50% {\n      opacity: 0.5;\n    }\n  }\n`;\n","export const theme = {\n    brown: {\n        1: '#f3ead8',\n        2: '#e7d9bd',\n        3: '#c9b18a',\n        4: '#b79c71',\n        5: '#a0855e',\n        6: '#896f4c',\n        7: '#72593d',\n        8: '#5a452e',\n        9: '#402f21',\n        10: '#251d18'\n    }\n} as const;","import { useState, useEffect } from \"react\";\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport { LandingPage } from \"./pages/Landing\";\nimport { CompetitionPage } from \"./pages/Competition\";\nimport { LoadingPage } from \"./pages/Loading\";\nimport { ThemeProvider } from \"styled-components\";\nimport { theme } from \"./theme\";\n\nfunction App() {\n  const [showLoading, setShowLoading] = useState<Boolean>(true);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setShowLoading(false);\n    }, 1000);\n  }, []);\n\n  return (\n    <ThemeProvider theme={theme}>\n      {showLoading ? <LoadingPage /> : <></>}\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/\">\n            <LandingPage />\n          </Route>\n          <Route exact path=\"/competition-form\">\n            <CompetitionPage />\n          </Route>\n        </Switch>\n      </HashRouter>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}